<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
<modelVersion>4.0.0</modelVersion>
<groupId>com.appleyk</groupId>
<artifactId>Spring-Neo4j-Movie</artifactId>
<version>0.0.1-SNAPSHOT</version>
<packaging>war</packaging>
<description>Spring-Boot 集成Neo4j 实现电影问答功能</description>
<parent>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-parent</artifactId>
	<version>1.5.12.RELEASE</version>
</parent>
<!-- 使用Java8，嘗試使用新特新【stream和lambda】 -->
<properties>
	<java.version>1.8</java.version>
	<janino.version>3.0.8</janino.version>
	        <!-- Change the nd4j.backend property to nd4j-cuda-9.0-platform nd4j-cuda-9.2-platform or nd4j-cuda-10.0-platform to use CUDA GPUs -->
        <nd4j.backend>nd4j-native-platform</nd4j.backend>
        <!--<nd4j.backend>nd4j-cuda-9.2-platform</nd4j.backend>-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <shadedClassifier>bin</shadedClassifier>

        <nd4j.version>1.0.0-beta3</nd4j.version>
        <dl4j.version>1.0.0-beta3</dl4j.version>
        <datavec.version>1.0.0-beta3</datavec.version>
        <arbiter.version>1.0.0-beta3</arbiter.version>
        <rl4j.version>1.0.0-beta3</rl4j.version>

        <!-- For Spark examples: change the _1 to _2 to switch between Spark 1 and Spark 2 -->
        <dl4j.spark.version>1.0.0-beta3_spark_1</dl4j.spark.version>
        <datavec.spark.version>1.0.0-beta3_spark_1</datavec.spark.version>

        <!-- Scala binary version: DL4J's Spark and UI functionality are released with both Scala 2.10 and 2.11 support -->
        <scala.binary.version>2.11</scala.binary.version>

        <hadoop.version>2.2.0</hadoop.version>  <!-- Hadoop version used by Spark 1.6.3 and 2.2.1 (and likely others) -->
        <guava.version>19.0</guava.version>
        <logback.version>1.1.7</logback.version>
        <jfreechart.version>1.0.13</jfreechart.version>
        <jcommon.version>1.0.23</jcommon.version>
        <maven-compiler-plugin.version>3.6.1</maven-compiler-plugin.version>
        <maven-shade-plugin.version>2.4.3</maven-shade-plugin.version>
        <exec-maven-plugin.version>1.4.0</exec-maven-plugin.version>
        <maven.minimum.version>3.3.1</maven.minimum.version>
        <javafx.version>2.2.3</javafx.version>
        <javafx.runtime.lib.jar>${env.JAVAFX_HOME}/jfxrt.jar</javafx.runtime.lib.jar>
        <aws.sdk.version>1.11.109</aws.sdk.version>
        <jackson.version>2.5.1</jackson.version>
		<scala.plugin.version>3.2.2</scala.plugin.version>
</properties>
<modules>
        <module>dl4j-examples</module>
        <module>dl4j-spark-examples</module>
        <module>datavec-examples</module>
        <module>dl4j-cuda-specific-examples</module>
        <module>nd4j-examples</module>
        <module>rl4j-examples</module>
        <module>lstm-hdfs</module>
</modules>
<dependencyManagement> 
	<dependencies> 
		<dependency> 
			<groupId>org.nd4j</groupId> 
			<artifactId>nd4j-native-platform</artifactId> 
			<version>${nd4j.version}</version> 
		</dependency> 
		<dependency> 
			<groupId>org.nd4j</groupId> 
			<artifactId>nd4j-cuda-7.5-platform</artifactId> 
			<version>${nd4j.version}</version> 
		</dependency> 
		<dependency> 
			<groupId>org.nd4j</groupId> 
			<artifactId>nd4j-cuda-8.0-platform</artifactId> 
			<version>${nd4j.version}</version> 
		</dependency> 
	</dependencies> 
</dependencyManagement>

<dependencies>
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-web</artifactId>
	</dependency>
	<!-- 添加热部署 devtools：监听文件变动 -->
	<!-- 当Java文件改动时，Spring-boo会快速重新启动 -->
	<!-- 最简单的测试，就是随便找一个文件Ctrl+S一下，就可以看到效果 -->
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-devtools</artifactId>
		<!-- optional=true,依赖不会传递 -->
		<!-- 本项目依赖devtools；若依赖本项目的其他项目想要使用devtools，需要重新引入 -->
		<optional>true</optional>
	</dependency>
	<!-- Spring 单元测试 -->
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-test</artifactId>
		<scope>test</scope>
	</dependency>
	<!-- JUnit单元测试 -->
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
	</dependency>

	<!-- 中文分詞器内置数据包的Portable 最新版 -->
	<!-- http://mvnrepository.com/artifact/com.hankcs/hanlp -->
	<dependency>
		<groupId>com.hankcs</groupId>
		<artifactId>hanlp</artifactId>
		<version>portable-1.6.3</version>
	</dependency>
	<!-- 添加thymeleaf 支持页面跳转 -->
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-thymeleaf</artifactId>
	</dependency>
	<!-- https://mvnrepository.com/artifact/org.apache.spark/spark-core -->
	<dependency>
		<groupId>org.apache.spark</groupId>
		<artifactId>spark-core_2.12</artifactId>
		<version>2.4.0</version>
		<exclusions>
			<exclusion>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<!-- https://mvnrepository.com/artifact/org.apache.spark/spark-mllib -->
	<dependency>
		<groupId>org.apache.spark</groupId>
		<artifactId>spark-mllib_2.12</artifactId>
		<version>2.4.0</version>
	</dependency>
	<dependency>
		<groupId>org.codehaus.janino</groupId>
		<artifactId>janino</artifactId>
	</dependency>
	<dependency>
		<groupId>com.thoughtworks.paranamer</groupId>
		<artifactId>paranamer</artifactId>
		<version>2.8</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/net.sf.json-lib/json-lib -->
	<dependency>
	    <groupId>net.sf.json-lib</groupId>
	    <artifactId>json-lib</artifactId>
	    <version>2.4</version>
	    <classifier>jdk15</classifier>
	</dependency>
	<!-- https://mvnrepository.com/artifact/org.apdplat/word -->
	<dependency>
	    <groupId>org.apdplat</groupId>
	    <artifactId>word</artifactId>
	    <version>1.3</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
	<dependency>
	    <groupId>mysql</groupId>
	    <artifactId>mysql-connector-java</artifactId>
	    <version>5.1.46</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/org.apache.jena/jena-arq -->
	<dependency>
	    <groupId>org.apache.jena</groupId>
	    <artifactId>jena-arq</artifactId>
	    <version>3.6.0</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/tw.edu.ntu.csie/libsvm -->
	<dependency>
	    <groupId>tw.edu.ntu.csie</groupId>
	    <artifactId>libsvm</artifactId>
	    <version>3.17</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
	<dependency>
	    <groupId>com.google.code.gson</groupId>
	    <artifactId>gson</artifactId>
	    <version>2.8.0</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/org.json/json -->
	<dependency>
	    <groupId>org.json</groupId>
	    <artifactId>json</artifactId>
	    <version>20160810</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/com.baidu.aip/java-sdk -->
	<dependency>
	    <groupId>com.baidu.aip</groupId>
	    <artifactId>java-sdk</artifactId>
	    <version>4.1.0</version>
	</dependency>
	<dependency> 
		<groupId>org.nd4j</groupId> 
		<artifactId>${nd4j.backend}</artifactId> 
	</dependency> 
	<!-- Core DL4J functionality --> 
	<dependency> 
		<groupId>org.deeplearning4j</groupId> 
		<artifactId>deeplearning4j-core</artifactId> 
		<version>${dl4j.version}</version> 
	</dependency> 
	<dependency> 
		<groupId>org.deeplearning4j</groupId> 
		<artifactId>deeplearning4j-nlp</artifactId> 
		<version>${dl4j.version}</version> 
	</dependency>
		<!-- deeplearning4j-ui is used for HistogramIterationListener + visualization: 
			see http://deeplearning4j.org/visualization --> 
	<dependency> 
		<groupId>org.deeplearning4j</groupId> 
		<artifactId>deeplearning4j-ui_${scala.binary.version}</artifactId> 
		<version>${dl4j.version}</version> 
	</dependency> 
	<!-- Force guava versions for using UI/HistogramIterationListener --> 
	<dependency> 
		<groupId>com.google.guava</groupId> 
		<artifactId>guava</artifactId> 
		<version>${guava.version}</version> 
	</dependency> 
	<!-- datavec-data-codec: used only in video example for loading video data --> 
	<dependency> 
		<artifactId>datavec-data-codec</artifactId> 
		<groupId>org.datavec</groupId> 
		<version>${datavec.version}</version> 
	</dependency> 
	<!-- Used in the feedforward/classification/MLP* and feedforward/regression/RegressionMathFunctions 
			example --> 
	<dependency> 
		<groupId>jfree</groupId> 
		<artifactId>jfreechart</artifactId> 
		<version>${jfreechart.version}</version> 
	</dependency> 
	<dependency> 
		<groupId>org.jfree</groupId> 
		<artifactId>jcommon</artifactId> 
		<version>${jcommon.version}</version> 
	</dependency> 
	<!-- Used for downloading data in some of the examples --> 
	<dependency> 
		<groupId>org.apache.httpcomponents</groupId> 
		<artifactId>httpclient</artifactId> 
		<version>4.3.5</version> 
	</dependency>

</dependencies>
<build>
	<plugins>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.0.1</version>
                <executions>
                    <execution>
                        <id>enforce-default</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>[${maven.minimum.version},)</version>
                                    <message>********** Minimum Maven Version is ${maven.minimum.version}. Please upgrade Maven before continuing (run "mvn --version" to check). **********</message>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Automated Code Formatting -->
            <plugin>
                <groupId>net.revelc.code.formatter</groupId>
                <artifactId>formatter-maven-plugin</artifactId>
                <version>2.0.0</version>
                <configuration>
                    <configFile>${session.executionRootDirectory}/contrib/formatter.xml</configFile>
                    <directories>
                        <directory>dl4j-examples</directory>
                        <directory>dl4j-spark-examples</directory>
                        <directory>datavec-examples</directory>
                        <directory>dl4j-cuda-specific-examples</directory>
                        <directory>nd4j-examples</directory>
                        <directory>rl4j-examples</directory>
                        <directory>arbiter-examples</directory>
                        <directory>lstm-hdfs</directory>
                    </directories>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.lewisd</groupId>
                <artifactId>lint-maven-plugin</artifactId>
                <version>0.0.11</version>
                <configuration>
                    <failOnViolation>true</failOnViolation>
                    <onlyRunRules>
                        <rule>DuplicateDep</rule>
                        <rule>RedundantPluginVersion</rule>
                        <!-- Rules incompatible with Java 9
                        <rule>VersionProp</rule>
                        <rule>DotVersionProperty</rule> -->
                    </onlyRunRules>
                </configuration>
                <executions>
                    <execution>
                        <id>pom-lint</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
		</plugin>
	</plugins>
	<resources>
		<resource>
			<directory>src/main/resources</directory>
			<includes>
				<include>**/*.properties</include>
				<include>**/*.xml</include>
				<include>**/*.html</include>
			</includes>
			<filtering>false</filtering>
		</resource>
	</resources>
</build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>com.lewisd</groupId>
                                        <artifactId>lint-maven-plugin</artifactId>
                                        <versionRange>[0.0.11,)</versionRange>
                                        <goals>
                                            <goal>check</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore/>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
</pluginManagement>
    <profiles>
        <profile>
            <id>OpenJFX-11</id>
            <activation>
                <jdk>11</jdk>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-controls</artifactId>
                    <version>11</version>
                </dependency>
                <dependency>
                    <groupId>org.openjfx</groupId>
                    <artifactId>javafx-swing</artifactId>
                    <version>11</version>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>OpenJFX</id>
            <activation>
                <jdk>1.7</jdk>
            </activation>

            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <version>1.0.1</version>
                        <executions>
                            <execution>
                                <id>enforce-default</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireProperty>
                                            <property>env.JAVAFX_HOME</property>
                                            <message>You must set the environment variable JAVAFX_HOME to the installation directory of the JavaFX 2.0 SDK! (with Oracle JDK1.7, $JRE_HOME/lib/jfxrt.jar)</message>
                                        </requireProperty>

                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-install-plugin</artifactId>
                        <version>2.5.2</version>
                        <executions>
                            <execution>
                                <id>install-external</id>
                                <phase>clean</phase>
                                <configuration>
                                    <file>${javafx.runtime.lib.jar}</file>
                                    <repositoryLayout>default</repositoryLayout>
                                    <groupId>com.oracle</groupId>
                                    <artifactId>javafx</artifactId>
                                    <version>${javafx.version}</version>
                                    <packaging>jar</packaging>
                                    <generatePom>true</generatePom>
                                </configuration>
                                <goals>
                                    <goal>install-file</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
</profiles>

</project>